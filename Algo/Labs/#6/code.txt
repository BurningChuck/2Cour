#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using std::vector;
using std::string;
using std::min;
using std::cin;
using std::cout;
using std::endl;


vector<int> z_function (string s) {
    int n = (int) s.length();
    vector<int> z (n);
    for (int i=1, l=0, r=0; i<n; ++i) {
        if (i <= r)
            z[i] = min (r-i+1, z[i-l]);
        while (i+z[i] < n && s[z[i]] == s[i+z[i]])
            ++z[i];
        if (i+z[i]-1 > r)
            l = i,  r = i+z[i]-1;
    }
    return z;
}

int main() {
    string example = "ababac";
    string input;
    string concatenation;
    vector<int> result;
    cout << "Example string: " << example << endl;
    cout << "Input your string: ";
    cin >> input;
    concatenation = input + example + example;
    result = z_function(concatenation);
    for(int i = input.length(); i<concatenation.size();i++)
    {
        if( result[i] >= input.length())
        {
            cout << "It's cycle offset";
            return 0;
        }
    }
    cout << "It's not offset";
    return 0;
}
